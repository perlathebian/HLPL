#include<iostream>
using namespace std;

void swap_v(int a, int b)
{ int temp; temp = a, a=b; b=temp; };
void swap_r(int& a,int& b)
{ int temp; temp = a, a=b; b=temp; };
void swap_cr(const int& a, const int& b)
{ int temp; temp = a, a=b; b=temp; };
int main()
{
int x = 7;
int y =9;
swap_v(x,y); 
swap_v(7,9);

swap_r(x,y); 
swap_r(7,9);

swap_cr(x,y); 
swap_cr(7,9);

const int cx = 7;
const int cy = 9;
swap_v(cx,cy);
swap_v(7.7,9.9);

swap_r(cx,cy);
swap_r(7.7,9.9);

swap_cr(cx,cy);
swap_cr(7.7,9.9);

double dx = 7.7;
double dy = 9.9;
swap_v(dx,dy);
swap_v(7.7,9.9);
swap_r(dx,dy);
swap_r(7.7,9.9);
swap_cr(dx,dy);
swap_cr(7.7,9.9);

}
____________________________________________________________________________________________________________________________________
------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
using namespace std;

void swap_v(int a, int b)
{ 
    int temp;
    temp = a;
    a=b; 
    b=temp; 
};
void swap_r(int& a,int& b)
{ 
    int temp; 
    temp = a; 
    a=b;
    b=temp; 
};
//void swap_cr(const int& a, const int& b) //this one does not compile because a cannot be equal to b
//{                                        //The constant variable values cannot be changed after its initialization.
//    int temp; 
//    temp = a; 
//    a=b; 
//    b=temp; 
//};
int main()
{
int x = 7;
int y =9;
swap_v(x,y); 
swap_v(7,9);

swap_r(x,y); 
//swap_r(7,9); //int& returns a reference (address) of an integer so variable cannot be of type int

//swap_cr(x,y); //doesn't work because its corresponding void function cannot compile
//swap_cr(7,9);

const int cx = 7;
const int cy = 9;
swap_v(cx,cy);
swap_v(7.7,9.9);

//swap_r(cx,cy); //int& returns a reference (address) of an integer so variable cannot be of type const initialization
//swap_r(7.7,9.9);//int& returns a reference (address) of an integer so variable cannot be of type double

//swap_cr(cx,cy);//doesn't work because its corresponding void function cannot compile
//swap_cr(7.7,9.9);//doesn't work because its corresponding void function cannot compile

double dx = 7.7;
double dy = 9.9;
swap_v(dx,dy);
swap_v(7.7,9.9);
//swap_r(dx,dy);//int& returns a reference (address) of an integer so variable cannot be of type double
//swap_r(7.7,9.9);/int& returns a reference (address) of an integer so variable cannot be of type double
//swap_cr(dx,dy); //doesn't work because its corresponding void function cannot compile
//swap_cr(7.7,9.9);//doesn't work because its corresponding void function cannot compile

}